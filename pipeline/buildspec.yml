#
# buildspec.yml
#

version: 0.2

env:
  variables:
    deploy_bucket: api-gateway-lambda-deploy
    deploy_payload: deployment.zip

phases:
  install:
    runtime-versions:
      nodejs: 20
#    commands:

  pre_build:
    commands:
      - BUILD_VERSION=$(date --date="@$(echo ${CODEBUILD_START_TIME} | cut -c1-10)" +"%Y%m%d%H%M%S")
      - COMMIT_TAG=gitcommit-${CODEBUILD_RESOLVED_SOURCE_VERSION}

  build:
    commands:
      #
      # build the assets
      #
      # emsspaces function
      - cd ${CODEBUILD_SRC_DIR}/emsspaces
      - npm install
      - zip -r ${deploy_payload} .
      #
      # libcal-Hours function
      - cd ${CODEBUILD_SRC_DIR}/libcal-Hours
      - npm install
      - zip -r ${deploy_payload} .
      #
      # mkrsp-libauth-3dprinter function
      - cd ${CODEBUILD_SRC_DIR}/mkrsp-libauth-3dprinter
      - npm install
      - zip -r ${deploy_payload} .
      #
      # mkrsp-quiz-3dprinter function
      - cd ${CODEBUILD_SRC_DIR}/mkrsp-quiz-3dprinter
      - npm install
      - zip -r ${deploy_payload} .
      #
      # copy to the results bucket
      #
      #
      # emsspaces function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/emsspaces/${deploy_payload} s3://${deploy_bucket}/${BUILD_VERSION}/emsspaces/${deploy_payload} --quiet
      #
      # libcal-Hours function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/libcal-Hours/${deploy_payload} s3://${deploy_bucket}/${BUILD_VERSION}/libcal-Hours/${deploy_payload} --quiet
      #
      # mkrsp-libauth-3dprinter function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/mkrsp-libauth-3dprinter/${deploy_payload} s3://${deploy_bucket}/${BUILD_VERSION}/mkrsp-libauth-3dprinter/${deploy_payload} --quiet
      #
      # mkrsp-quiz-3dprinter function
      - aws s3 cp ${CODEBUILD_SRC_DIR}/mkrsp-quiz-3dprinter/${deploy_payload} s3://${deploy_bucket}/${BUILD_VERSION}/mkrsp-quiz-3dprinter/${deploy_payload} --quiet
      #
      # create the git commit tag file
      #
      - touch ${CODEBUILD_SRC_DIR}/${COMMIT_TAG}.git
      - aws s3 cp ${CODEBUILD_SRC_DIR}/${COMMIT_TAG}.git s3://${deploy_bucket}/${BUILD_VERSION}/${COMMIT_TAG}.git --quiet
      #
      # make the latest folder
      #
      - aws s3 sync s3://${deploy_bucket}/${BUILD_VERSION} s3://${deploy_bucket}/latest --delete --quiet
      #
      # update the latest tag
      #
      - aws --region=$AWS_REGION ssm put-parameter --name /lambdas/${deploy_bucket}/latest --value ${BUILD_VERSION} --type String --overwrite

#  post_build:
#    commands:

#
# end of file
#
